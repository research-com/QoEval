# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
# image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - build
  - run

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3.9 -V  # Print out python version for debugging
  - python3.9 -m venv venv
  - source venv/bin/activate

build-dist:
  stage: build
  tags:
    - python3.9
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements.txt
    - pip3 install build
    - python3.9 -m build
    - pip3 install --force-reinstall dist/*.tar.gz
  artifacts:
    paths:
      - dist/*.tar.gz

run-check-params:
  stage: run
  tags:
    - python3.9
  script:
    # run the qoeval check command
    - qoeval --parameterfile $CI_PROJECT_DIR/stimuli-params/full.csv --check-params --skipgenerate --skippostprocessing VS A ALL

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
